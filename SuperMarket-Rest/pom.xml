<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.ncs</groupId>
		<artifactId>SuperMarket</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>SuperMarket-Rest</artifactId>
	<packaging>war</packaging>
	<description>SuperMarket-Rest</description>

	<dependencies>
		<!--添加对于SuperMarket Mapper层的依赖，mapper层里面就已经添加了持久层框架的依赖MYbatis，所以后边不在需要添加 -->
		<dependency>
			<groupId>com.ncs</groupId>
			<artifactId>SuperMarket-Manager-Mapper</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!--添加Spring的依赖 -->

		<!-- Spring IOC容器相关 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<!-- spring 依赖注入 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<!-- spring web相关依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- spring整合jdbc的依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<!-- spring 切面依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<!--spring 上下文支持 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<!-- JSP相关 -->
		<!-- jstl标签 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<!-- 要用到HttpServletRequest和HttpServletResponse等对象，则需要引入servlet-api.jar -->
		<!-- 一般在tomcat安装目录\lib 文件夹下面有，当你把web项目部署到tomcat，会自动加载这个jar包来识别Serlvet一些对象 -->
		<!-- 而由于我们此工程将tomcat作为maven插件，则我们需要手动加入 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<!--添加Tomcat插件 -->
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- 资源文件拷贝插件 -->
			<!-- 插件的作用 主要是处理将 主程序与 测试程序所需的资源文件复制到输出编译文件夹中 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- java编译插件 -->
			<!-- 配置编译时JDK的版本，编码方式 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- 配置Tomcat插件 -->
				<!-- 将tomcat 内嵌到 web项目中，这样可以直接运行 webapp项目 -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<!--端口号 -->
						<port>8082</port>
						<!-- 根目录 -->
						<path>/</path>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>